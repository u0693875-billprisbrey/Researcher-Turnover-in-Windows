Meeting Notes
Review updated workforce journey query
7.10.2025

SUMMARY:
- Bill explains the situation:  Because of the use of a cut-off date in the query, there are many more "exits" than "entries" per EMPLID, presumably because they "entered" before the cut-off date.
- Kaidon explains his modified query:  First it identifies all individuals who have activity after the cut off date (1 Jan 2010), then it pulls the entire history for these individuals.
- HR approves the use of this query.
- Brian/Daniel and Dave Howell agree -- records are much better after about 2013 or 2014.
- Kaidon notices:  some of the "activity" is just data change and may not be affecting headcount.  He provides an example of someone who retired in 1986, but had an activity of "data change" in 2015 and was pulled into this data.  We may find ways to filter the query for more efficient performance.

PURPOSE:  The purpose of this meeting is to share the exploratory data analysis on HR’s updated query; review problematic assumptions; and discuss query modifications.
PROCESS:
  - Review document “Workforce Journey EDA (Single Records)“ (attached)
  - Discuss problematic assumptions (below)
  - Discuss query modifications by Kaidon
  - Review add’l graphics or EDA (as available)
PAYOFF: 
  - Bill receives explanation and approval from HR to use the modified query

Problematic assumptions:

First, the number of exits should not exceed the number of entries for a type. Many examples of these inconsistencies were found. These may be explained as having an entry date that preceded the query start date.
This can be resolved in one of two ways. One way is entering a dummy “entry” action to mirror the unpaired “exit” action, and set this action to one day preceding the query. However, this enters an assumption into the data set that might obscure an error and loses information like job duration.
Another way is to modify the query to pull the entire history of any employees that have activity after the query start date of Jan 1, 2010. That would make the first effective date in the data set much older than Jan 1, 2010, but a complete record of all activities for all employees wouldn’t be expected until after Jan 1, 2010. Although older data is less accurate, this would avoid introducing assumptions, obscuring errors, and losing information.


NOTES:

Kaidon shows off his revised query: identifies a list of all people active after our cut-off date (Jan 1 2010), then pulls all of their information.
Takes 6min to run so he runs it every night


Brian:  New to writing SQL, will discuss with Daniel.
Daniel:  We discussed this and thought we'd do it this way.

Brian:   Says there's a 1945 earliest, then a 2010 bringing them back in.  Maybe there's a way to change how people were classified in 2015, but he actually retires in 1986. 
Daniel:  Emeritime faculty is weird, because they are actually getting paid.  I think that's a weird anomaly that's just going to happen in the system.  Not a normal thing, still in the system as things can happen but they aren't really "active."

Kaidon:  If I dig and see a large amount of these due to "data change records."  Signs:  RET action a long time ago.  An action of Data Change "DTA" in 2015.  Your data changed but nothing about your situation changed (position, new supervisor.)



Any sense of large changes in headcount in the last 10 years? --> Dip five years ago and then recovering.
Brian:  A re-org can change the population of a department moved under a different VP area.  Like, was SoM and is now a Dep't of Medicine.  But that's not the overall university number.

Dave:  Dep't is an "academic" dep't that can give out academic appointments.  Everything else is an "org."  Thats a nuance.

Dave:  Need changes approved? --> Daniel: No
Dave: Fiscal year or calendar year? --> Bill groans.
      Lots of changes around July 1st.

2014:  When Dave is really confident in OSP.

Can I get job families?  Any way to lump these?

Slighlty more job titles than job codes? -->  Patient privacy?  
Actually more job codes than job titles, which makes sense (job codes are no longer active).  Titles can change.  A job family shouldn't change.  An inactive job code won't have a job title with it.


Ideas?  Wish I could see? 
Transfers between dep'ts?  25 yrs with no breaks but switch dep'ts several times?  Analysis on that?  
Dave:  How are people becoming PIs?  When do they put in their first proposal and when do they get their first award?  Are we losing PI's due to more mobility?  Is it because younger workers aren't staying?  Are we losing young PI's to mobility and are the older ones retiring?  That's why "age" is so important.

If anyone has a "wouldn't it be cool if" ... then let me know.






Here's the new query:

CREATE OR REPLACE FORCE EDITIONABLE VIEW "UUETL_HR"."EMPL_AGE_RANGE_ACTION_V" ("EMPLID", "EMPL_RCD", "EFFDT", "EFFSEQ", "ACTION", "ACTION_DESCR", "ACTION_REASON", "ACTION_REASON_DESCR", "JOBCODE", "JOB_TITLE", "DEPTID", "DEPT_NAME", "VOLUNTARY_FLAG", "AGE_BAND", "UCAREER_JOBCODE_FLAG") AS 
  with empl_from_2010 as (
  select distinct 
   emplid
  from ps_uu_unsec_job_vw  
  where effdt > TO_DATE('2010-01-01','YYYY-MM-DD') 
 )
  SELECT 
 A.EMPLID, A.EMPL_RCD, A.EFFDT, A.EFFSEQ
    , A.ACTION, B.ACTION_DESCR
    , A.ACTION_REASON, C.DESCR ACTION_REASON_DESCR, A.JOBCODE, E.DESCR JOB_TITLE
    , A.DEPTID, F.DESCR DEPT_NAME
    , Case when A.ACTION ! = 'TER' then ''
        when A.ACTION  = ('TER') 
        AND A.ACTION_REASON not in ('BNK', 'EVW', 'I9', 'INV', 'NER', 'RFN', 'RIF', 'RLS') 
        then 'Voluntary' else 'Involuntary' end VOLUNTARY_FLAG
    , Case    when (A.EFFDT-D.BIRTHDATE)/365.25 < 20
        then 'Under 20' 
    when (A.EFFDT-D.BIRTHDATE)/365.25 >= 20  and (A.EFFDT-D.BIRTHDATE)/365.25 < 30
        then '20s'
    when (A.EFFDT-D.BIRTHDATE)/365.25 >= 30  and (A.EFFDT-D.BIRTHDATE)/365.25  < 40
        then '30s'
    when (A.EFFDT-D.BIRTHDATE)/365.25 >= 40  and (A.EFFDT-D.BIRTHDATE)/365.25  < 50
        then '40s'
    when (A.EFFDT-D.BIRTHDATE)/365.25 >= 50  and (A.EFFDT-D.BIRTHDATE)/365.25 < 60
        then '50s'
    when (A.EFFDT-D.BIRTHDATE)/365.25 >= 60  and (A.EFFDT-D.BIRTHDATE)/365.25  < 70
        then '60s'
    when (A.EFFDT-D.BIRTHDATE)/365.25 >= 70  and (A.EFFDT-D.BIRTHDATE)/365.25 < 80
        then '70s'
    when (A.EFFDT-D.BIRTHDATE)/365.25 >= 80  and (A.EFFDT-D.BIRTHDATE)/365.25 < 90
        then '80s'
    else '90 and Above'
        end Age_Band
    , Case when LENGTH(A.JOBCODE) = 6
        AND A.JOBCODE NOT LIKE '7%'
        then 'UCareer Job Code'
        else ''
        end UCAREER_JOBCODE_FLAG
FROM PS_UU_UNSEC_JOB_VW A
    JOIN PS_ACTION_TBL B
        ON (B.ACTION = A.ACTION)
    JOIN PS_ACTN_REASON_TBL C
        ON (C.ACTION = A.ACTION
            AND C.ACTION_REASON = A.ACTION_REASON)
    JOIN ps_personal_dt_fst D
        ON (D.EMPLID = A.EMPLID)
    JOIN PS_JOBCODE_TBL E
        ON (E.JOBCODE = A.JOBCODE)
    JOIN PS_DEPT_TBL F
        ON (F.DEPTID = A.DEPTID)
-- WHERE  A.EFFDT > TO_DATE('2010-01-01','YYYY-MM-DD')
where a.emplid in (select emplid from empl_from_2010)
    and B.EFFDT = (SELECT MAX(B_ED.EFFDT) 
        FROM PS_ACTION_TBL B_ED
        WHERE B.ACTION = B_ED.ACTION
        AND B_ED.EFFDT <= SYSDATE)
    AND C.EFFDT = (SELECT MAX(C_ED.EFFDT) 
        FROM PS_ACTN_REASON_TBL C_ED
        WHERE C.ACTION = C_ED.ACTION
        AND C.ACTION_REASON = C_ED.ACTION_REASON
        AND C_ED.EFFDT <= SYSDATE)
    AND E.EFFDT = (SELECT MAX(E_ED.EFFDT) 
        FROM PS_JOBCODE_TBL E_ED
        WHERE E.JOBCODE = E_ED.JOBCODE
        AND E_ED.EFFDT <= SYSDATE)         
    AND F.EFFDT = (SELECT MAX(F_ED.EFFDT) 
        FROM PS_DEPT_TBL F_ED
        WHERE F.DEPTID = F_ED.DEPTID
        AND F_ED.EFFDT <= SYSDATE);